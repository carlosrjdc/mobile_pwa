"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/public-ip";
exports.ids = ["vendor-chunks/public-ip"];
exports.modules = {

/***/ "(ssr)/./node_modules/public-ip/index.js":
/*!*****************************************!*\
  !*** ./node_modules/public-ip/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelError: () => (/* reexport safe */ got__WEBPACK_IMPORTED_MODULE_5__.CancelError),\n/* harmony export */   IpNotFoundError: () => (/* binding */ IpNotFoundError),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:util */ \"node:util\");\n/* harmony import */ var node_dgram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:dgram */ \"node:dgram\");\n/* harmony import */ var dns_socket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dns-socket */ \"(ssr)/./node_modules/dns-socket/index.js\");\n/* harmony import */ var got__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! got */ \"(ssr)/./node_modules/got/dist/source/index.js\");\n/* harmony import */ var got__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! got */ \"(ssr)/./node_modules/got/dist/source/as-promise/types.js\");\n/* harmony import */ var is_ip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! is-ip */ \"(ssr)/./node_modules/is-ip/index.js\");\n\n\n\n\n\nclass IpNotFoundError extends Error {\n    constructor(options){\n        super(\"Could not get the public IP address\", options);\n        this.name = \"IpNotFoundError\";\n    }\n}\nconst defaults = {\n    timeout: 5000,\n    onlyHttps: false\n};\nconst dnsServers = [\n    {\n        v4: {\n            servers: [\n                \"208.67.222.222\",\n                \"208.67.220.220\",\n                \"208.67.222.220\",\n                \"208.67.220.222\"\n            ],\n            name: \"myip.opendns.com\",\n            type: \"A\"\n        },\n        v6: {\n            servers: [\n                \"2620:0:ccc::2\",\n                \"2620:0:ccd::2\"\n            ],\n            name: \"myip.opendns.com\",\n            type: \"AAAA\"\n        }\n    },\n    {\n        v4: {\n            servers: [\n                \"216.239.32.10\",\n                \"216.239.34.10\",\n                \"216.239.36.10\",\n                \"216.239.38.10\"\n            ],\n            name: \"o-o.myaddr.l.google.com\",\n            type: \"TXT\",\n            transform: (ip)=>ip.replace(/\"/g, \"\")\n        },\n        v6: {\n            servers: [\n                \"2001:4860:4802:32::a\",\n                \"2001:4860:4802:34::a\",\n                \"2001:4860:4802:36::a\",\n                \"2001:4860:4802:38::a\"\n            ],\n            name: \"o-o.myaddr.l.google.com\",\n            type: \"TXT\",\n            transform: (ip)=>ip.replace(/\"/g, \"\")\n        }\n    }\n];\nconst type = {\n    v4: {\n        dnsServers: dnsServers.map(({ v4: { servers, ...question } })=>({\n                servers,\n                question\n            })),\n        httpsUrls: [\n            \"https://icanhazip.com/\",\n            \"https://api.ipify.org/\"\n        ]\n    },\n    v6: {\n        dnsServers: dnsServers.map(({ v6: { servers, ...question } })=>({\n                servers,\n                question\n            })),\n        httpsUrls: [\n            \"https://icanhazip.com/\",\n            \"https://api6.ipify.org/\"\n        ]\n    }\n};\nconst queryDns = (version, options)=>{\n    const data = type[version];\n    const socket = dns_socket__WEBPACK_IMPORTED_MODULE_2__({\n        retries: 0,\n        maxQueries: 1,\n        socket: node_dgram__WEBPACK_IMPORTED_MODULE_1__.createSocket(version === \"v6\" ? \"udp6\" : \"udp4\"),\n        timeout: options.timeout\n    });\n    const socketQuery = (0,node_util__WEBPACK_IMPORTED_MODULE_0__.promisify)(socket.query.bind(socket));\n    const promise = (async ()=>{\n        let lastError;\n        for (const dnsServerInfo of data.dnsServers){\n            const { servers, question } = dnsServerInfo;\n            for (const server of servers){\n                if (socket.destroyed) {\n                    return;\n                }\n                try {\n                    const { name, type, transform } = question;\n                    // eslint-disable-next-line no-await-in-loop\n                    const dnsResponse = await socketQuery({\n                        questions: [\n                            {\n                                name,\n                                type\n                            }\n                        ]\n                    }, 53, server);\n                    const { answers: { 0: { data } } } = dnsResponse;\n                    const response = (typeof data === \"string\" ? data : data.toString()).trim();\n                    const ip = transform ? transform(response) : response;\n                    if (ip && is_ip__WEBPACK_IMPORTED_MODULE_3__[version](ip)) {\n                        socket.destroy();\n                        return ip;\n                    }\n                } catch (error) {\n                    lastError = error;\n                }\n            }\n        }\n        socket.destroy();\n        throw new IpNotFoundError({\n            cause: lastError\n        });\n    })();\n    promise.cancel = ()=>{\n        socket.destroy();\n    };\n    return promise;\n};\nconst queryHttps = (version, options)=>{\n    let cancel;\n    const promise = (async ()=>{\n        try {\n            const requestOptions = {\n                dnsLookupIpVersion: version === \"v6\" ? 6 : 4,\n                retry: {\n                    limit: 0\n                },\n                timeout: {\n                    request: options.timeout\n                }\n            };\n            const urls = [\n                ...type[version].httpsUrls,\n                ...options.fallbackUrls ?? []\n            ];\n            let lastError;\n            for (const url of urls){\n                try {\n                    // Note: We use `.get` to allow for mocking.\n                    const gotPromise = got__WEBPACK_IMPORTED_MODULE_4__[\"default\"].get(url, requestOptions);\n                    cancel = gotPromise.cancel;\n                    // eslint-disable-next-line no-await-in-loop\n                    const response = await gotPromise;\n                    const ip = (response.body || \"\").trim();\n                    if (ip && is_ip__WEBPACK_IMPORTED_MODULE_3__[version](ip)) {\n                        return ip;\n                    }\n                } catch (error) {\n                    lastError = error;\n                    if (error instanceof got__WEBPACK_IMPORTED_MODULE_5__.CancelError) {\n                        throw error;\n                    }\n                }\n            }\n            throw new IpNotFoundError({\n                cause: lastError\n            });\n        } catch (error) {\n            // Don't throw a cancellation error for consistency with DNS\n            if (!(error instanceof got__WEBPACK_IMPORTED_MODULE_5__.CancelError)) {\n                throw error;\n            }\n        }\n    })();\n    promise.cancel = function() {\n        return cancel.apply(this);\n    };\n    return promise;\n};\nconst queryAll = (version, options)=>{\n    let cancel;\n    const promise = (async ()=>{\n        let response;\n        const dnsPromise = queryDns(version, options);\n        cancel = dnsPromise.cancel;\n        try {\n            response = await dnsPromise;\n        } catch  {\n            const httpsPromise = queryHttps(version, options);\n            cancel = httpsPromise.cancel;\n            response = await httpsPromise;\n        }\n        return response;\n    })();\n    promise.cancel = cancel;\n    return promise;\n};\nconst publicIp = {};\npublicIp.v4 = (options)=>{\n    options = {\n        ...defaults,\n        ...options\n    };\n    if (!options.onlyHttps) {\n        return queryAll(\"v4\", options);\n    }\n    if (options.onlyHttps) {\n        return queryHttps(\"v4\", options);\n    }\n    return queryDns(\"v4\", options);\n};\npublicIp.v6 = (options)=>{\n    options = {\n        ...defaults,\n        ...options\n    };\n    if (!options.onlyHttps) {\n        return queryAll(\"v6\", options);\n    }\n    if (options.onlyHttps) {\n        return queryHttps(\"v6\", options);\n    }\n    return queryDns(\"v6\", options);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (publicIp);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/public-ip/index.js\n");

/***/ })

};
;