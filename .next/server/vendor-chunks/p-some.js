"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/p-some";
exports.ids = ["vendor-chunks/p-some"];
exports.modules = {

/***/ "(ssr)/./node_modules/p-some/index.js":
/*!**************************************!*\
  !*** ./node_modules/p-some/index.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AggregateError: () => (/* reexport safe */ aggregate_error__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   FilterError: () => (/* binding */ FilterError),\n/* harmony export */   \"default\": () => (/* binding */ pSome)\n/* harmony export */ });\n/* harmony import */ var aggregate_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aggregate-error */ \"(ssr)/./node_modules/aggregate-error/index.js\");\n/* harmony import */ var p_cancelable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! p-cancelable */ \"(ssr)/./node_modules/p-cancelable/index.js\");\n\n\nclass FilterError extends Error {\n}\n// Important: Cannot use the `async` keyword.\nfunction pSome(iterable, options) {\n    return new p_cancelable__WEBPACK_IMPORTED_MODULE_1__[\"default\"]((resolve, reject, onCancel)=>{\n        const { count, filter = ()=>true } = options;\n        if (!Number.isFinite(count)) {\n            reject(new TypeError(`Expected a finite number, got ${typeof options.count}`));\n            return;\n        }\n        const values = [];\n        const errors = [];\n        let elementCount = 0;\n        let isSettled = false;\n        const completed = new Set();\n        const maybeSettle = ()=>{\n            if (values.length === count) {\n                resolve(values);\n                isSettled = true;\n            }\n            if (elementCount - errors.length < count) {\n                reject(new aggregate_error__WEBPACK_IMPORTED_MODULE_0__[\"default\"](errors));\n                isSettled = true;\n            }\n            return isSettled;\n        };\n        const cancelPending = ()=>{\n            for (const promise of iterable){\n                if (!completed.has(promise) && typeof promise.cancel === \"function\") {\n                    promise.cancel();\n                }\n            }\n        };\n        onCancel(cancelPending);\n        for (const element of iterable){\n            elementCount++;\n            (async ()=>{\n                try {\n                    const value = await element;\n                    if (isSettled) {\n                        return;\n                    }\n                    if (!filter(value)) {\n                        throw new FilterError(\"Value does not satisfy filter\");\n                    }\n                    values.push(value);\n                } catch (error) {\n                    errors.push(error);\n                } finally{\n                    completed.add(element);\n                    if (!isSettled && maybeSettle()) {\n                        cancelPending();\n                    }\n                }\n            })();\n        }\n        if (count > elementCount) {\n            reject(new RangeError(`Expected input to contain at least ${options.count} items, but contains ${elementCount} items`));\n            cancelPending();\n        }\n    });\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcC1zb21lL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTZDO0FBQ047QUFFaEMsTUFBTUUsb0JBQW9CQztBQUFPO0FBRXhDLDZDQUE2QztBQUM5QixTQUFTQyxNQUFNQyxRQUFRLEVBQUVDLE9BQU87SUFDOUMsT0FBTyxJQUFJTCxvREFBV0EsQ0FBQyxDQUFDTSxTQUFTQyxRQUFRQztRQUN4QyxNQUFNLEVBQ0xDLEtBQUssRUFDTEMsU0FBUyxJQUFNLElBQUksRUFDbkIsR0FBR0w7UUFFSixJQUFJLENBQUNNLE9BQU9DLFFBQVEsQ0FBQ0gsUUFBUTtZQUM1QkYsT0FBTyxJQUFJTSxVQUFVLENBQUMsOEJBQThCLEVBQUUsT0FBT1IsUUFBUUksS0FBSyxDQUFDLENBQUM7WUFDNUU7UUFDRDtRQUVBLE1BQU1LLFNBQVMsRUFBRTtRQUNqQixNQUFNQyxTQUFTLEVBQUU7UUFDakIsSUFBSUMsZUFBZTtRQUNuQixJQUFJQyxZQUFZO1FBRWhCLE1BQU1DLFlBQVksSUFBSUM7UUFDdEIsTUFBTUMsY0FBYztZQUNuQixJQUFJTixPQUFPTyxNQUFNLEtBQUtaLE9BQU87Z0JBQzVCSCxRQUFRUTtnQkFDUkcsWUFBWTtZQUNiO1lBRUEsSUFBSUQsZUFBZUQsT0FBT00sTUFBTSxHQUFHWixPQUFPO2dCQUN6Q0YsT0FBTyxJQUFJUix1REFBY0EsQ0FBQ2dCO2dCQUMxQkUsWUFBWTtZQUNiO1lBRUEsT0FBT0E7UUFDUjtRQUVBLE1BQU1LLGdCQUFnQjtZQUNyQixLQUFLLE1BQU1DLFdBQVduQixTQUFVO2dCQUMvQixJQUFJLENBQUNjLFVBQVVNLEdBQUcsQ0FBQ0QsWUFBWSxPQUFPQSxRQUFRRSxNQUFNLEtBQUssWUFBWTtvQkFDcEVGLFFBQVFFLE1BQU07Z0JBQ2Y7WUFDRDtRQUNEO1FBRUFqQixTQUFTYztRQUVULEtBQUssTUFBTUksV0FBV3RCLFNBQVU7WUFDL0JZO1lBRUM7Z0JBQ0EsSUFBSTtvQkFDSCxNQUFNVyxRQUFRLE1BQU1EO29CQUVwQixJQUFJVCxXQUFXO3dCQUNkO29CQUNEO29CQUVBLElBQUksQ0FBQ1AsT0FBT2lCLFFBQVE7d0JBQ25CLE1BQU0sSUFBSTFCLFlBQVk7b0JBQ3ZCO29CQUVBYSxPQUFPYyxJQUFJLENBQUNEO2dCQUNiLEVBQUUsT0FBT0UsT0FBTztvQkFDZmQsT0FBT2EsSUFBSSxDQUFDQztnQkFDYixTQUFVO29CQUNUWCxVQUFVWSxHQUFHLENBQUNKO29CQUVkLElBQUksQ0FBQ1QsYUFBYUcsZUFBZTt3QkFDaENFO29CQUNEO2dCQUNEO1lBQ0Q7UUFDRDtRQUVBLElBQUliLFFBQVFPLGNBQWM7WUFDekJULE9BQU8sSUFBSXdCLFdBQVcsQ0FBQyxtQ0FBbUMsRUFBRTFCLFFBQVFJLEtBQUssQ0FBQyxxQkFBcUIsRUFBRU8sYUFBYSxNQUFNLENBQUM7WUFDckhNO1FBQ0Q7SUFDRDtBQUNEO0FBRXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbW9iaWxlLy4vbm9kZV9tb2R1bGVzL3Atc29tZS9pbmRleC5qcz80MjM2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBZ2dyZWdhdGVFcnJvciBmcm9tICdhZ2dyZWdhdGUtZXJyb3InO1xuaW1wb3J0IFBDYW5jZWxhYmxlIGZyb20gJ3AtY2FuY2VsYWJsZSc7XG5cbmV4cG9ydCBjbGFzcyBGaWx0ZXJFcnJvciBleHRlbmRzIEVycm9yIHt9XG5cbi8vIEltcG9ydGFudDogQ2Fubm90IHVzZSB0aGUgYGFzeW5jYCBrZXl3b3JkLlxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcFNvbWUoaXRlcmFibGUsIG9wdGlvbnMpIHtcblx0cmV0dXJuIG5ldyBQQ2FuY2VsYWJsZSgocmVzb2x2ZSwgcmVqZWN0LCBvbkNhbmNlbCkgPT4ge1xuXHRcdGNvbnN0IHtcblx0XHRcdGNvdW50LFxuXHRcdFx0ZmlsdGVyID0gKCkgPT4gdHJ1ZVxuXHRcdH0gPSBvcHRpb25zO1xuXG5cdFx0aWYgKCFOdW1iZXIuaXNGaW5pdGUoY291bnQpKSB7XG5cdFx0XHRyZWplY3QobmV3IFR5cGVFcnJvcihgRXhwZWN0ZWQgYSBmaW5pdGUgbnVtYmVyLCBnb3QgJHt0eXBlb2Ygb3B0aW9ucy5jb3VudH1gKSk7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29uc3QgdmFsdWVzID0gW107XG5cdFx0Y29uc3QgZXJyb3JzID0gW107XG5cdFx0bGV0IGVsZW1lbnRDb3VudCA9IDA7XG5cdFx0bGV0IGlzU2V0dGxlZCA9IGZhbHNlO1xuXG5cdFx0Y29uc3QgY29tcGxldGVkID0gbmV3IFNldCgpO1xuXHRcdGNvbnN0IG1heWJlU2V0dGxlID0gKCkgPT4ge1xuXHRcdFx0aWYgKHZhbHVlcy5sZW5ndGggPT09IGNvdW50KSB7XG5cdFx0XHRcdHJlc29sdmUodmFsdWVzKTtcblx0XHRcdFx0aXNTZXR0bGVkID0gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKGVsZW1lbnRDb3VudCAtIGVycm9ycy5sZW5ndGggPCBjb3VudCkge1xuXHRcdFx0XHRyZWplY3QobmV3IEFnZ3JlZ2F0ZUVycm9yKGVycm9ycykpO1xuXHRcdFx0XHRpc1NldHRsZWQgPSB0cnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gaXNTZXR0bGVkO1xuXHRcdH07XG5cblx0XHRjb25zdCBjYW5jZWxQZW5kaW5nID0gKCkgPT4ge1xuXHRcdFx0Zm9yIChjb25zdCBwcm9taXNlIG9mIGl0ZXJhYmxlKSB7XG5cdFx0XHRcdGlmICghY29tcGxldGVkLmhhcyhwcm9taXNlKSAmJiB0eXBlb2YgcHJvbWlzZS5jYW5jZWwgPT09ICdmdW5jdGlvbicpIHtcblx0XHRcdFx0XHRwcm9taXNlLmNhbmNlbCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRcdG9uQ2FuY2VsKGNhbmNlbFBlbmRpbmcpO1xuXG5cdFx0Zm9yIChjb25zdCBlbGVtZW50IG9mIGl0ZXJhYmxlKSB7XG5cdFx0XHRlbGVtZW50Q291bnQrKztcblxuXHRcdFx0KGFzeW5jICgpID0+IHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRjb25zdCB2YWx1ZSA9IGF3YWl0IGVsZW1lbnQ7XG5cblx0XHRcdFx0XHRpZiAoaXNTZXR0bGVkKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKCFmaWx0ZXIodmFsdWUpKSB7XG5cdFx0XHRcdFx0XHR0aHJvdyBuZXcgRmlsdGVyRXJyb3IoJ1ZhbHVlIGRvZXMgbm90IHNhdGlzZnkgZmlsdGVyJyk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0dmFsdWVzLnB1c2godmFsdWUpO1xuXHRcdFx0XHR9IGNhdGNoIChlcnJvcikge1xuXHRcdFx0XHRcdGVycm9ycy5wdXNoKGVycm9yKTtcblx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRjb21wbGV0ZWQuYWRkKGVsZW1lbnQpO1xuXG5cdFx0XHRcdFx0aWYgKCFpc1NldHRsZWQgJiYgbWF5YmVTZXR0bGUoKSkge1xuXHRcdFx0XHRcdFx0Y2FuY2VsUGVuZGluZygpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSkoKTtcblx0XHR9XG5cblx0XHRpZiAoY291bnQgPiBlbGVtZW50Q291bnQpIHtcblx0XHRcdHJlamVjdChuZXcgUmFuZ2VFcnJvcihgRXhwZWN0ZWQgaW5wdXQgdG8gY29udGFpbiBhdCBsZWFzdCAke29wdGlvbnMuY291bnR9IGl0ZW1zLCBidXQgY29udGFpbnMgJHtlbGVtZW50Q291bnR9IGl0ZW1zYCkpO1xuXHRcdFx0Y2FuY2VsUGVuZGluZygpO1xuXHRcdH1cblx0fSk7XG59XG5cbmV4cG9ydCB7QWdncmVnYXRlRXJyb3J9O1xuIl0sIm5hbWVzIjpbIkFnZ3JlZ2F0ZUVycm9yIiwiUENhbmNlbGFibGUiLCJGaWx0ZXJFcnJvciIsIkVycm9yIiwicFNvbWUiLCJpdGVyYWJsZSIsIm9wdGlvbnMiLCJyZXNvbHZlIiwicmVqZWN0Iiwib25DYW5jZWwiLCJjb3VudCIsImZpbHRlciIsIk51bWJlciIsImlzRmluaXRlIiwiVHlwZUVycm9yIiwidmFsdWVzIiwiZXJyb3JzIiwiZWxlbWVudENvdW50IiwiaXNTZXR0bGVkIiwiY29tcGxldGVkIiwiU2V0IiwibWF5YmVTZXR0bGUiLCJsZW5ndGgiLCJjYW5jZWxQZW5kaW5nIiwicHJvbWlzZSIsImhhcyIsImNhbmNlbCIsImVsZW1lbnQiLCJ2YWx1ZSIsInB1c2giLCJlcnJvciIsImFkZCIsIlJhbmdlRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/p-some/index.js\n");

/***/ })

};
;